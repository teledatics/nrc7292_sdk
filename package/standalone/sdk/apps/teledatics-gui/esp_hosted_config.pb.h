/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.7-dev */

#ifndef PB_ESP_HOSTED_CONFIG_PB_H_INCLUDED
#define PB_ESP_HOSTED_CONFIG_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
/* Enums similar to ESP IDF */
typedef enum ctrl_vendor_ie_type {
    CTRL_VENDOR_IE_TYPE_BEACON = 0,
    CTRL_VENDOR_IE_TYPE_PROBE_REQ = 1,
    CTRL_VENDOR_IE_TYPE_PROBE_RESP = 2,
    CTRL_VENDOR_IE_TYPE_ASSOC_REQ = 3,
    CTRL_VENDOR_IE_TYPE_ASSOC_RESP = 4
} ctrl_vendor_ie_type_t;

typedef enum ctrl_vendor_ieid {
    CTRL_VENDOR_IEID_ID_0 = 0,
    CTRL_VENDOR_IEID_ID_1 = 1
} ctrl_vendor_ieid_t;

typedef enum ctrl_wifi_mode {
    CTRL_WIFI_MODE_NONE = 0,
    CTRL_WIFI_MODE_STA = 1,
    CTRL_WIFI_MODE_AP = 2,
    CTRL_WIFI_MODE_APSTA = 3
} ctrl_wifi_mode_t;

typedef enum ctrl_wifi_bw {
    CTRL_WIFI_BW_BW_INVALID = 0,
    CTRL_WIFI_BW_HT20 = 1,
    CTRL_WIFI_BW_HT40 = 2
} ctrl_wifi_bw_t;

typedef enum ctrl_wifi_power_save {
    CTRL_WIFI_POWER_SAVE_PS_INVALID = 0,
    CTRL_WIFI_POWER_SAVE_MIN_MODEM = 1,
    CTRL_WIFI_POWER_SAVE_MAX_MODEM = 2
} ctrl_wifi_power_save_t;

typedef enum ctrl_wifi_sec_prot {
    CTRL_WIFI_SEC_PROT_OPEN = 0,
    CTRL_WIFI_SEC_PROT_WEP = 1,
    CTRL_WIFI_SEC_PROT_WPA_PSK = 2,
    CTRL_WIFI_SEC_PROT_WPA2_PSK = 3,
    CTRL_WIFI_SEC_PROT_WPA_WPA2_PSK = 4,
    CTRL_WIFI_SEC_PROT_WPA2_ENTERPRISE = 5,
    CTRL_WIFI_SEC_PROT_WPA3_PSK = 6,
    CTRL_WIFI_SEC_PROT_WPA2_WPA3_PSK = 7
} ctrl_wifi_sec_prot_t;

/* enums for Control path */
typedef enum ctrl_status {
    CTRL_STATUS_CONNECTED = 0,
    CTRL_STATUS_NOT_CONNECTED = 1,
    CTRL_STATUS_NO_AP_FOUND = 2,
    CTRL_STATUS_CONNECTION_FAIL = 3,
    CTRL_STATUS_INVALID_ARGUMENT = 4,
    CTRL_STATUS_OUT_OF_RANGE = 5
} ctrl_status_t;

typedef enum ctrl_msg_type {
    CTRL_MSG_TYPE_MSG_TYPE_INVALID = 0,
    CTRL_MSG_TYPE_REQ = 1,
    CTRL_MSG_TYPE_RESP = 2,
    CTRL_MSG_TYPE_EVENT = 3,
    CTRL_MSG_TYPE_MSG_TYPE_MAX = 4
} ctrl_msg_type_t;

typedef enum ctrl_msg_id {
    CTRL_MSG_ID_MSG_ID_INVALID = 0,
    /* * Request Msgs * */
    CTRL_MSG_ID_REQ_BASE = 100,
    CTRL_MSG_ID_REQ_GET_MAC_ADDRESS = 101,
    CTRL_MSG_ID_REQ_SET_MAC_ADDRESS = 102,
    CTRL_MSG_ID_REQ_GET_WIFI_MODE = 103,
    CTRL_MSG_ID_REQ_SET_WIFI_MODE = 104,
    CTRL_MSG_ID_REQ_GET_AP_SCAN_LIST = 105,
    CTRL_MSG_ID_REQ_GET_AP_CONFIG = 106,
    CTRL_MSG_ID_REQ_CONNECT_AP = 107,
    CTRL_MSG_ID_REQ_DISCONNECT_AP = 108,
    CTRL_MSG_ID_REQ_GET_SOFT_AP_CONFIG = 109,
    CTRL_MSG_ID_REQ_SET_SOFT_AP_VENDOR_SPECIFIC_IE = 110,
    CTRL_MSG_ID_REQ_START_SOFT_AP = 111,
    CTRL_MSG_ID_REQ_GET_SOFT_AP_CONNECTED_STA_LIST = 112,
    CTRL_MSG_ID_REQ_STOP_SOFT_AP = 113,
    CTRL_MSG_ID_REQ_SET_POWER_SAVE_MODE = 114,
    CTRL_MSG_ID_REQ_GET_POWER_SAVE_MODE = 115,
    CTRL_MSG_ID_REQ_OTA_BEGIN = 116,
    CTRL_MSG_ID_REQ_OTA_WRITE = 117,
    CTRL_MSG_ID_REQ_OTA_END = 118,
    CTRL_MSG_ID_REQ_SET_WIFI_MAX_TX_POWER = 119,
    CTRL_MSG_ID_REQ_GET_WIFI_CURR_TX_POWER = 120,
    CTRL_MSG_ID_REQ_CONFIG_HEARTBEAT = 121,
    /* Add new control path command response before Req_Max
 and update Req_Max */
    CTRL_MSG_ID_REQ_MAX = 122,
    /* * Response Msgs * */
    CTRL_MSG_ID_RESP_BASE = 200,
    CTRL_MSG_ID_RESP_GET_MAC_ADDRESS = 201,
    CTRL_MSG_ID_RESP_SET_MAC_ADDRESS = 202,
    CTRL_MSG_ID_RESP_GET_WIFI_MODE = 203,
    CTRL_MSG_ID_RESP_SET_WIFI_MODE = 204,
    CTRL_MSG_ID_RESP_GET_AP_SCAN_LIST = 205,
    CTRL_MSG_ID_RESP_GET_AP_CONFIG = 206,
    CTRL_MSG_ID_RESP_CONNECT_AP = 207,
    CTRL_MSG_ID_RESP_DISCONNECT_AP = 208,
    CTRL_MSG_ID_RESP_GET_SOFT_AP_CONFIG = 209,
    CTRL_MSG_ID_RESP_SET_SOFT_AP_VENDOR_SPECIFIC_IE = 210,
    CTRL_MSG_ID_RESP_START_SOFT_AP = 211,
    CTRL_MSG_ID_RESP_GET_SOFT_AP_CONNECTED_STA_LIST = 212,
    CTRL_MSG_ID_RESP_STOP_SOFT_AP = 213,
    CTRL_MSG_ID_RESP_SET_POWER_SAVE_MODE = 214,
    CTRL_MSG_ID_RESP_GET_POWER_SAVE_MODE = 215,
    CTRL_MSG_ID_RESP_OTA_BEGIN = 216,
    CTRL_MSG_ID_RESP_OTA_WRITE = 217,
    CTRL_MSG_ID_RESP_OTA_END = 218,
    CTRL_MSG_ID_RESP_SET_WIFI_MAX_TX_POWER = 219,
    CTRL_MSG_ID_RESP_GET_WIFI_CURR_TX_POWER = 220,
    CTRL_MSG_ID_RESP_CONFIG_HEARTBEAT = 221,
    /* Add new control path command response before Resp_Max
 and update Resp_Max */
    CTRL_MSG_ID_RESP_MAX = 222,
    /* * Event Msgs * */
    CTRL_MSG_ID_EVENT_BASE = 300,
    CTRL_MSG_ID_EVENT_ESP_INIT = 301,
    CTRL_MSG_ID_EVENT_HEARTBEAT = 302,
    CTRL_MSG_ID_EVENT_STATION_DISCONNECT_FROM_AP = 303,
    CTRL_MSG_ID_EVENT_STATION_DISCONNECT_FROM_ESP_SOFT_AP = 304,
    /* Add new control path command notification before Event_Max
 and update Event_Max */
    CTRL_MSG_ID_EVENT_MAX = 305
} ctrl_msg_id_t;

/* Struct definitions */
/* * Event structure * */
typedef struct ctrl_msg_event_esp_init {
    pb_callback_t init_data;
} ctrl_msg_event_esp_init_t;

typedef struct ctrl_msg_req_get_ap_config {
    char dummy_field;
} ctrl_msg_req_get_ap_config_t;

typedef struct ctrl_msg_req_get_mode {
    char dummy_field;
} ctrl_msg_req_get_mode_t;

typedef struct ctrl_msg_req_get_soft_ap_config {
    char dummy_field;
} ctrl_msg_req_get_soft_ap_config_t;

typedef struct ctrl_msg_req_get_status {
    char dummy_field;
} ctrl_msg_req_get_status_t;

typedef struct ctrl_msg_req_get_wifi_curr_tx_power {
    char dummy_field;
} ctrl_msg_req_get_wifi_curr_tx_power_t;

typedef struct ctrl_msg_req_ota_begin {
    char dummy_field;
} ctrl_msg_req_ota_begin_t;

typedef struct ctrl_msg_req_ota_end {
    char dummy_field;
} ctrl_msg_req_ota_end_t;

typedef struct ctrl_msg_req_scan_result {
    char dummy_field;
} ctrl_msg_req_scan_result_t;

typedef struct ctrl_msg_req_soft_ap_connected_sta {
    char dummy_field;
} ctrl_msg_req_soft_ap_connected_sta_t;

typedef PB_BYTES_ARRAY_T(18) connected_sta_list_mac_t;
typedef struct connected_sta_list {
    connected_sta_list_mac_t mac;
    int32_t rssi;
} connected_sta_list_t;

typedef struct ctrl_msg_event_heartbeat {
    int32_t hb_num;
} ctrl_msg_event_heartbeat_t;

typedef struct ctrl_msg_event_station_disconnect_from_ap {
    int32_t resp;
} ctrl_msg_event_station_disconnect_from_ap_t;

typedef PB_BYTES_ARRAY_T(18) ctrl_msg_event_station_disconnect_from_esp_soft_ap_mac_t;
typedef struct ctrl_msg_event_station_disconnect_from_esp_soft_ap {
    int32_t resp;
    ctrl_msg_event_station_disconnect_from_esp_soft_ap_mac_t mac;
} ctrl_msg_event_station_disconnect_from_esp_soft_ap_t;

typedef struct ctrl_msg_req_config_heartbeat {
    bool enable;
    int32_t duration;
} ctrl_msg_req_config_heartbeat_t;

typedef struct ctrl_msg_req_connect_ap {
    char ssid[32];
    char pwd[64];
    char bssid[18];
    bool is_wpa3_supported;
    int32_t listen_interval;
} ctrl_msg_req_connect_ap_t;

/* * Req/Resp structure * */
typedef struct ctrl_msg_req_get_mac_address {
    int32_t mode;
} ctrl_msg_req_get_mac_address_t;

typedef PB_BYTES_ARRAY_T(100) ctrl_msg_req_ota_write_ota_data_t;
typedef struct ctrl_msg_req_ota_write {
    ctrl_msg_req_ota_write_ota_data_t ota_data;
} ctrl_msg_req_ota_write_t;

typedef PB_BYTES_ARRAY_T(18) ctrl_msg_req_set_mac_address_mac_t;
typedef struct ctrl_msg_req_set_mac_address {
    ctrl_msg_req_set_mac_address_mac_t mac;
    int32_t mode;
} ctrl_msg_req_set_mac_address_t;

typedef struct ctrl_msg_req_set_mode {
    int32_t mode;
} ctrl_msg_req_set_mode_t;

typedef struct ctrl_msg_req_set_wifi_max_tx_power {
    int32_t wifi_max_tx_power;
} ctrl_msg_req_set_wifi_max_tx_power_t;

typedef struct ctrl_msg_req_start_soft_ap {
    char ssid[32];
    char pwd[64];
    int32_t chnl;
    ctrl_wifi_sec_prot_t sec_prot;
    int32_t max_conn;
    bool ssid_hidden;
    int32_t bw;
} ctrl_msg_req_start_soft_ap_t;

typedef PB_BYTES_ARRAY_T(3) ctrl_msg_req_vendor_ie_data_vendor_oui_t;
typedef PB_BYTES_ARRAY_T(100) ctrl_msg_req_vendor_ie_data_payload_t;
typedef struct ctrl_msg_req_vendor_ie_data {
    int32_t element_id;
    int32_t length;
    ctrl_msg_req_vendor_ie_data_vendor_oui_t vendor_oui;
    int32_t vendor_oui_type;
    ctrl_msg_req_vendor_ie_data_payload_t payload;
} ctrl_msg_req_vendor_ie_data_t;

typedef struct ctrl_msg_resp_config_heartbeat {
    int32_t resp;
} ctrl_msg_resp_config_heartbeat_t;

typedef PB_BYTES_ARRAY_T(18) ctrl_msg_resp_connect_ap_mac_t;
typedef struct ctrl_msg_resp_connect_ap {
    int32_t resp;
    ctrl_msg_resp_connect_ap_mac_t mac;
} ctrl_msg_resp_connect_ap_t;

typedef PB_BYTES_ARRAY_T(32) ctrl_msg_resp_get_ap_config_ssid_t;
typedef PB_BYTES_ARRAY_T(18) ctrl_msg_resp_get_ap_config_bssid_t;
typedef struct ctrl_msg_resp_get_ap_config {
    ctrl_msg_resp_get_ap_config_ssid_t ssid;
    ctrl_msg_resp_get_ap_config_bssid_t bssid;
    int32_t rssi;
    int32_t chnl;
    ctrl_wifi_sec_prot_t sec_prot;
    int32_t resp;
} ctrl_msg_resp_get_ap_config_t;

typedef PB_BYTES_ARRAY_T(18) ctrl_msg_resp_get_mac_address_mac_t;
typedef struct ctrl_msg_resp_get_mac_address {
    ctrl_msg_resp_get_mac_address_mac_t mac;
    int32_t resp;
} ctrl_msg_resp_get_mac_address_t;

typedef struct ctrl_msg_resp_get_mode {
    int32_t mode;
    int32_t resp;
} ctrl_msg_resp_get_mode_t;

typedef PB_BYTES_ARRAY_T(32) ctrl_msg_resp_get_soft_ap_config_ssid_t;
typedef PB_BYTES_ARRAY_T(64) ctrl_msg_resp_get_soft_ap_config_pwd_t;
typedef struct ctrl_msg_resp_get_soft_ap_config {
    ctrl_msg_resp_get_soft_ap_config_ssid_t ssid;
    ctrl_msg_resp_get_soft_ap_config_pwd_t pwd;
    int32_t chnl;
    ctrl_wifi_sec_prot_t sec_prot;
    int32_t max_conn;
    bool ssid_hidden;
    int32_t bw;
    int32_t resp;
} ctrl_msg_resp_get_soft_ap_config_t;

typedef struct ctrl_msg_resp_get_status {
    int32_t resp;
} ctrl_msg_resp_get_status_t;

typedef struct ctrl_msg_resp_get_wifi_curr_tx_power {
    int32_t wifi_curr_tx_power;
    int32_t resp;
} ctrl_msg_resp_get_wifi_curr_tx_power_t;

typedef struct ctrl_msg_resp_ota_begin {
    int32_t resp;
} ctrl_msg_resp_ota_begin_t;

typedef struct ctrl_msg_resp_ota_end {
    int32_t resp;
} ctrl_msg_resp_ota_end_t;

typedef struct ctrl_msg_resp_ota_write {
    int32_t resp;
} ctrl_msg_resp_ota_write_t;

typedef struct ctrl_msg_resp_set_mac_address {
    int32_t resp;
} ctrl_msg_resp_set_mac_address_t;

typedef struct ctrl_msg_resp_set_mode {
    int32_t resp;
} ctrl_msg_resp_set_mode_t;

typedef struct ctrl_msg_resp_set_soft_ap_vendor_specific_ie {
    int32_t resp;
} ctrl_msg_resp_set_soft_ap_vendor_specific_ie_t;

typedef struct ctrl_msg_resp_set_wifi_max_tx_power {
    int32_t resp;
} ctrl_msg_resp_set_wifi_max_tx_power_t;

typedef PB_BYTES_ARRAY_T(18) ctrl_msg_resp_start_soft_ap_mac_t;
typedef struct ctrl_msg_resp_start_soft_ap {
    int32_t resp;
    ctrl_msg_resp_start_soft_ap_mac_t mac;
} ctrl_msg_resp_start_soft_ap_t;

typedef PB_BYTES_ARRAY_T(32) scan_result_ssid_t;
typedef PB_BYTES_ARRAY_T(18) scan_result_bssid_t;
/* internal supporting structures for CtrlMsg */
typedef struct scan_result {
    scan_result_ssid_t ssid;
    uint32_t chnl;
    int32_t rssi;
    scan_result_bssid_t bssid;
    ctrl_wifi_sec_prot_t sec_prot;
} scan_result_t;

typedef struct ctrl_msg_req_set_soft_ap_vendor_specific_ie {
    bool enable;
    ctrl_vendor_ie_type_t type;
    ctrl_vendor_ieid_t idx;
    bool has_vendor_ie_data;
    ctrl_msg_req_vendor_ie_data_t vendor_ie_data;
} ctrl_msg_req_set_soft_ap_vendor_specific_ie_t;

typedef struct ctrl_msg_resp_scan_result {
    uint32_t count;
    pb_size_t entries_count;
    scan_result_t entries[20];
    int32_t resp;
} ctrl_msg_resp_scan_result_t;

typedef struct ctrl_msg_resp_soft_ap_connected_sta {
    uint32_t num;
    pb_size_t stations_count;
    connected_sta_list_t stations[20];
    int32_t resp;
} ctrl_msg_resp_soft_ap_connected_sta_t;

typedef struct ctrl_msg {
    /* msg_type could be req, resp or Event */
    ctrl_msg_type_t msg_type;
    /* msg id */
    ctrl_msg_id_t msg_id;
    pb_size_t which_payload;
    union {
        /* * Requests * */
        ctrl_msg_req_get_mac_address_t req_get_mac_address;
        ctrl_msg_req_set_mac_address_t req_set_mac_address;
        ctrl_msg_req_get_mode_t req_get_wifi_mode;
        ctrl_msg_req_set_mode_t req_set_wifi_mode;
        ctrl_msg_req_scan_result_t req_scan_ap_list;
        ctrl_msg_req_get_ap_config_t req_get_ap_config;
        ctrl_msg_req_connect_ap_t req_connect_ap;
        ctrl_msg_req_get_status_t req_disconnect_ap;
        ctrl_msg_req_get_soft_ap_config_t req_get_softap_config;
        ctrl_msg_req_set_soft_ap_vendor_specific_ie_t req_set_softap_vendor_specific_ie;
        ctrl_msg_req_start_soft_ap_t req_start_softap;
        ctrl_msg_req_soft_ap_connected_sta_t req_softap_connected_stas_list;
        ctrl_msg_req_get_status_t req_stop_softap;
        ctrl_msg_req_set_mode_t req_set_power_save_mode;
        ctrl_msg_req_get_mode_t req_get_power_save_mode;
        ctrl_msg_req_ota_begin_t req_ota_begin;
        ctrl_msg_req_ota_write_t req_ota_write;
        ctrl_msg_req_ota_end_t req_ota_end;
        ctrl_msg_req_set_wifi_max_tx_power_t req_set_wifi_max_tx_power;
        ctrl_msg_req_get_wifi_curr_tx_power_t req_get_wifi_curr_tx_power;
        ctrl_msg_req_config_heartbeat_t req_config_heartbeat;
        /* * Responses * */
        ctrl_msg_resp_get_mac_address_t resp_get_mac_address;
        ctrl_msg_resp_set_mac_address_t resp_set_mac_address;
        ctrl_msg_resp_get_mode_t resp_get_wifi_mode;
        ctrl_msg_resp_set_mode_t resp_set_wifi_mode;
        ctrl_msg_resp_scan_result_t resp_scan_ap_list;
        ctrl_msg_resp_get_ap_config_t resp_get_ap_config;
        ctrl_msg_resp_connect_ap_t resp_connect_ap;
        ctrl_msg_resp_get_status_t resp_disconnect_ap;
        ctrl_msg_resp_get_soft_ap_config_t resp_get_softap_config;
        ctrl_msg_resp_set_soft_ap_vendor_specific_ie_t resp_set_softap_vendor_specific_ie;
        ctrl_msg_resp_start_soft_ap_t resp_start_softap;
        ctrl_msg_resp_soft_ap_connected_sta_t resp_softap_connected_stas_list;
        ctrl_msg_resp_get_status_t resp_stop_softap;
        ctrl_msg_resp_set_mode_t resp_set_power_save_mode;
        ctrl_msg_resp_get_mode_t resp_get_power_save_mode;
        ctrl_msg_resp_ota_begin_t resp_ota_begin;
        ctrl_msg_resp_ota_write_t resp_ota_write;
        ctrl_msg_resp_ota_end_t resp_ota_end;
        ctrl_msg_resp_set_wifi_max_tx_power_t resp_set_wifi_max_tx_power;
        ctrl_msg_resp_get_wifi_curr_tx_power_t resp_get_wifi_curr_tx_power;
        ctrl_msg_resp_config_heartbeat_t resp_config_heartbeat;
        /* * Notifications * */
        ctrl_msg_event_esp_init_t event_esp_init;
        ctrl_msg_event_heartbeat_t event_heartbeat;
        ctrl_msg_event_station_disconnect_from_ap_t event_station_disconnect_from_ap;
        ctrl_msg_event_station_disconnect_from_esp_soft_ap_t event_station_disconnect_from_esp_soft_ap;
    } payload;
} ctrl_msg_t;


/* Helper constants for enums */
#define _CTRL_VENDOR_IE_TYPE_MIN CTRL_VENDOR_IE_TYPE_BEACON
#define _CTRL_VENDOR_IE_TYPE_MAX CTRL_VENDOR_IE_TYPE_ASSOC_RESP
#define _CTRL_VENDOR_IE_TYPE_ARRAYSIZE ((ctrl_vendor_ie_type_t)(CTRL_VENDOR_IE_TYPE_ASSOC_RESP+1))

#define _CTRL_VENDOR_IEID_MIN CTRL_VENDOR_IEID_ID_0
#define _CTRL_VENDOR_IEID_MAX CTRL_VENDOR_IEID_ID_1
#define _CTRL_VENDOR_IEID_ARRAYSIZE ((ctrl_vendor_ieid_t)(CTRL_VENDOR_IEID_ID_1+1))

#define _CTRL_WIFI_MODE_MIN CTRL_WIFI_MODE_NONE
#define _CTRL_WIFI_MODE_MAX CTRL_WIFI_MODE_APSTA
#define _CTRL_WIFI_MODE_ARRAYSIZE ((ctrl_wifi_mode_t)(CTRL_WIFI_MODE_APSTA+1))

#define _CTRL_WIFI_BW_MIN CTRL_WIFI_BW_BW_INVALID
#define _CTRL_WIFI_BW_MAX CTRL_WIFI_BW_HT40
#define _CTRL_WIFI_BW_ARRAYSIZE ((ctrl_wifi_bw_t)(CTRL_WIFI_BW_HT40+1))

#define _CTRL_WIFI_POWER_SAVE_MIN CTRL_WIFI_POWER_SAVE_PS_INVALID
#define _CTRL_WIFI_POWER_SAVE_MAX CTRL_WIFI_POWER_SAVE_MAX_MODEM
#define _CTRL_WIFI_POWER_SAVE_ARRAYSIZE ((ctrl_wifi_power_save_t)(CTRL_WIFI_POWER_SAVE_MAX_MODEM+1))

#define _CTRL_WIFI_SEC_PROT_MIN CTRL_WIFI_SEC_PROT_OPEN
#define _CTRL_WIFI_SEC_PROT_MAX CTRL_WIFI_SEC_PROT_WPA2_WPA3_PSK
#define _CTRL_WIFI_SEC_PROT_ARRAYSIZE ((ctrl_wifi_sec_prot_t)(CTRL_WIFI_SEC_PROT_WPA2_WPA3_PSK+1))

#define _CTRL_STATUS_MIN CTRL_STATUS_CONNECTED
#define _CTRL_STATUS_MAX CTRL_STATUS_OUT_OF_RANGE
#define _CTRL_STATUS_ARRAYSIZE ((ctrl_status_t)(CTRL_STATUS_OUT_OF_RANGE+1))

#define _CTRL_MSG_TYPE_MIN CTRL_MSG_TYPE_MSG_TYPE_INVALID
#define _CTRL_MSG_TYPE_MAX CTRL_MSG_TYPE_MSG_TYPE_MAX
#define _CTRL_MSG_TYPE_ARRAYSIZE ((ctrl_msg_type_t)(CTRL_MSG_TYPE_MSG_TYPE_MAX+1))

#define _CTRL_MSG_ID_MIN CTRL_MSG_ID_MSG_ID_INVALID
#define _CTRL_MSG_ID_MAX CTRL_MSG_ID_EVENT_MAX
#define _CTRL_MSG_ID_ARRAYSIZE ((ctrl_msg_id_t)(CTRL_MSG_ID_EVENT_MAX+1))

#define scan_result_t_sec_prot_ENUMTYPE ctrl_wifi_sec_prot_t













#define ctrl_msg_resp_get_ap_config_t_sec_prot_ENUMTYPE ctrl_wifi_sec_prot_t




#define ctrl_msg_resp_get_soft_ap_config_t_sec_prot_ENUMTYPE ctrl_wifi_sec_prot_t

#define ctrl_msg_req_start_soft_ap_t_sec_prot_ENUMTYPE ctrl_wifi_sec_prot_t













#define ctrl_msg_req_set_soft_ap_vendor_specific_ie_t_type_ENUMTYPE ctrl_vendor_ie_type_t
#define ctrl_msg_req_set_soft_ap_vendor_specific_ie_t_idx_ENUMTYPE ctrl_vendor_ieid_t












#define ctrl_msg_t_msg_type_ENUMTYPE ctrl_msg_type_t
#define ctrl_msg_t_msg_id_ENUMTYPE ctrl_msg_id_t


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define SCAN_RESULT_INIT_DEFAULT                 {{0, {0}}, 0, 0, {0, {0}}, _CTRL_WIFI_SEC_PROT_MIN}
#define CONNECTED_STA_LIST_INIT_DEFAULT          {{0, {0}}, 0}
#define CTRL_MSG_REQ_GET_MAC_ADDRESS_INIT_DEFAULT {0}
#define CTRL_MSG_RESP_GET_MAC_ADDRESS_INIT_DEFAULT {{0, {0}}, 0}
#define CTRL_MSG_REQ_GET_MODE_INIT_DEFAULT       {0}
#define CTRL_MSG_RESP_GET_MODE_INIT_DEFAULT      {0, 0}
#define CTRL_MSG_REQ_SET_MODE_INIT_DEFAULT       {0}
#define CTRL_MSG_RESP_SET_MODE_INIT_DEFAULT      {0}
#define CTRL_MSG_REQ_GET_STATUS_INIT_DEFAULT     {0}
#define CTRL_MSG_RESP_GET_STATUS_INIT_DEFAULT    {0}
#define CTRL_MSG_REQ_SET_MAC_ADDRESS_INIT_DEFAULT {{0, {0}}, 0}
#define CTRL_MSG_RESP_SET_MAC_ADDRESS_INIT_DEFAULT {0}
#define CTRL_MSG_REQ_GET_AP_CONFIG_INIT_DEFAULT  {0}
#define CTRL_MSG_RESP_GET_AP_CONFIG_INIT_DEFAULT {{0, {0}}, {0, {0}}, 0, 0, _CTRL_WIFI_SEC_PROT_MIN, 0}
#define CTRL_MSG_REQ_CONNECT_AP_INIT_DEFAULT     {"", "", "", 0, 0}
#define CTRL_MSG_RESP_CONNECT_AP_INIT_DEFAULT    {0, {0, {0}}}
#define CTRL_MSG_REQ_GET_SOFT_AP_CONFIG_INIT_DEFAULT {0}
#define CTRL_MSG_RESP_GET_SOFT_AP_CONFIG_INIT_DEFAULT {{0, {0}}, {0, {0}}, 0, _CTRL_WIFI_SEC_PROT_MIN, 0, 0, 0, 0}
#define CTRL_MSG_REQ_START_SOFT_AP_INIT_DEFAULT  {"", "", 0, _CTRL_WIFI_SEC_PROT_MIN, 0, 0, 0}
#define CTRL_MSG_RESP_START_SOFT_AP_INIT_DEFAULT {0, {0, {0}}}
#define CTRL_MSG_REQ_SCAN_RESULT_INIT_DEFAULT    {0}
#define CTRL_MSG_RESP_SCAN_RESULT_INIT_DEFAULT   {0, 0, {SCAN_RESULT_INIT_DEFAULT, SCAN_RESULT_INIT_DEFAULT, SCAN_RESULT_INIT_DEFAULT, SCAN_RESULT_INIT_DEFAULT, SCAN_RESULT_INIT_DEFAULT, SCAN_RESULT_INIT_DEFAULT, SCAN_RESULT_INIT_DEFAULT, SCAN_RESULT_INIT_DEFAULT, SCAN_RESULT_INIT_DEFAULT, SCAN_RESULT_INIT_DEFAULT, SCAN_RESULT_INIT_DEFAULT, SCAN_RESULT_INIT_DEFAULT, SCAN_RESULT_INIT_DEFAULT, SCAN_RESULT_INIT_DEFAULT, SCAN_RESULT_INIT_DEFAULT, SCAN_RESULT_INIT_DEFAULT, SCAN_RESULT_INIT_DEFAULT, SCAN_RESULT_INIT_DEFAULT, SCAN_RESULT_INIT_DEFAULT, SCAN_RESULT_INIT_DEFAULT}, 0}
#define CTRL_MSG_REQ_SOFT_AP_CONNECTED_STA_INIT_DEFAULT {0}
#define CTRL_MSG_RESP_SOFT_AP_CONNECTED_STA_INIT_DEFAULT {0, 0, {CONNECTED_STA_LIST_INIT_DEFAULT, CONNECTED_STA_LIST_INIT_DEFAULT, CONNECTED_STA_LIST_INIT_DEFAULT, CONNECTED_STA_LIST_INIT_DEFAULT, CONNECTED_STA_LIST_INIT_DEFAULT, CONNECTED_STA_LIST_INIT_DEFAULT, CONNECTED_STA_LIST_INIT_DEFAULT, CONNECTED_STA_LIST_INIT_DEFAULT, CONNECTED_STA_LIST_INIT_DEFAULT, CONNECTED_STA_LIST_INIT_DEFAULT, CONNECTED_STA_LIST_INIT_DEFAULT, CONNECTED_STA_LIST_INIT_DEFAULT, CONNECTED_STA_LIST_INIT_DEFAULT, CONNECTED_STA_LIST_INIT_DEFAULT, CONNECTED_STA_LIST_INIT_DEFAULT, CONNECTED_STA_LIST_INIT_DEFAULT, CONNECTED_STA_LIST_INIT_DEFAULT, CONNECTED_STA_LIST_INIT_DEFAULT, CONNECTED_STA_LIST_INIT_DEFAULT, CONNECTED_STA_LIST_INIT_DEFAULT}, 0}
#define CTRL_MSG_REQ_OTA_BEGIN_INIT_DEFAULT      {0}
#define CTRL_MSG_RESP_OTA_BEGIN_INIT_DEFAULT     {0}
#define CTRL_MSG_REQ_OTA_WRITE_INIT_DEFAULT      {{0, {0}}}
#define CTRL_MSG_RESP_OTA_WRITE_INIT_DEFAULT     {0}
#define CTRL_MSG_REQ_OTA_END_INIT_DEFAULT        {0}
#define CTRL_MSG_RESP_OTA_END_INIT_DEFAULT       {0}
#define CTRL_MSG_REQ_VENDOR_IE_DATA_INIT_DEFAULT {0, 0, {0, {0}}, 0, {0, {0}}}
#define CTRL_MSG_REQ_SET_SOFT_AP_VENDOR_SPECIFIC_IE_INIT_DEFAULT {0, _CTRL_VENDOR_IE_TYPE_MIN, _CTRL_VENDOR_IEID_MIN, false, CTRL_MSG_REQ_VENDOR_IE_DATA_INIT_DEFAULT}
#define CTRL_MSG_RESP_SET_SOFT_AP_VENDOR_SPECIFIC_IE_INIT_DEFAULT {0}
#define CTRL_MSG_REQ_SET_WIFI_MAX_TX_POWER_INIT_DEFAULT {0}
#define CTRL_MSG_RESP_SET_WIFI_MAX_TX_POWER_INIT_DEFAULT {0}
#define CTRL_MSG_REQ_GET_WIFI_CURR_TX_POWER_INIT_DEFAULT {0}
#define CTRL_MSG_RESP_GET_WIFI_CURR_TX_POWER_INIT_DEFAULT {0, 0}
#define CTRL_MSG_REQ_CONFIG_HEARTBEAT_INIT_DEFAULT {0, 0}
#define CTRL_MSG_RESP_CONFIG_HEARTBEAT_INIT_DEFAULT {0}
#define CTRL_MSG_EVENT_ESP_INIT_INIT_DEFAULT     {{{NULL}, NULL}}
#define CTRL_MSG_EVENT_HEARTBEAT_INIT_DEFAULT    {0}
#define CTRL_MSG_EVENT_STATION_DISCONNECT_FROM_AP_INIT_DEFAULT {0}
#define CTRL_MSG_EVENT_STATION_DISCONNECT_FROM_ESP_SOFT_AP_INIT_DEFAULT {0, {0, {0}}}
#define CTRL_MSG_INIT_DEFAULT                    {_CTRL_MSG_TYPE_MIN, _CTRL_MSG_ID_MIN, 0, {CTRL_MSG_REQ_GET_MAC_ADDRESS_INIT_DEFAULT}}
#define SCAN_RESULT_INIT_ZERO                    {{0, {0}}, 0, 0, {0, {0}}, _CTRL_WIFI_SEC_PROT_MIN}
#define CONNECTED_STA_LIST_INIT_ZERO             {{0, {0}}, 0}
#define CTRL_MSG_REQ_GET_MAC_ADDRESS_INIT_ZERO   {0}
#define CTRL_MSG_RESP_GET_MAC_ADDRESS_INIT_ZERO  {{0, {0}}, 0}
#define CTRL_MSG_REQ_GET_MODE_INIT_ZERO          {0}
#define CTRL_MSG_RESP_GET_MODE_INIT_ZERO         {0, 0}
#define CTRL_MSG_REQ_SET_MODE_INIT_ZERO          {0}
#define CTRL_MSG_RESP_SET_MODE_INIT_ZERO         {0}
#define CTRL_MSG_REQ_GET_STATUS_INIT_ZERO        {0}
#define CTRL_MSG_RESP_GET_STATUS_INIT_ZERO       {0}
#define CTRL_MSG_REQ_SET_MAC_ADDRESS_INIT_ZERO   {{0, {0}}, 0}
#define CTRL_MSG_RESP_SET_MAC_ADDRESS_INIT_ZERO  {0}
#define CTRL_MSG_REQ_GET_AP_CONFIG_INIT_ZERO     {0}
#define CTRL_MSG_RESP_GET_AP_CONFIG_INIT_ZERO    {{0, {0}}, {0, {0}}, 0, 0, _CTRL_WIFI_SEC_PROT_MIN, 0}
#define CTRL_MSG_REQ_CONNECT_AP_INIT_ZERO        {"", "", "", 0, 0}
#define CTRL_MSG_RESP_CONNECT_AP_INIT_ZERO       {0, {0, {0}}}
#define CTRL_MSG_REQ_GET_SOFT_AP_CONFIG_INIT_ZERO {0}
#define CTRL_MSG_RESP_GET_SOFT_AP_CONFIG_INIT_ZERO {{0, {0}}, {0, {0}}, 0, _CTRL_WIFI_SEC_PROT_MIN, 0, 0, 0, 0}
#define CTRL_MSG_REQ_START_SOFT_AP_INIT_ZERO     {"", "", 0, _CTRL_WIFI_SEC_PROT_MIN, 0, 0, 0}
#define CTRL_MSG_RESP_START_SOFT_AP_INIT_ZERO    {0, {0, {0}}}
#define CTRL_MSG_REQ_SCAN_RESULT_INIT_ZERO       {0}
#define CTRL_MSG_RESP_SCAN_RESULT_INIT_ZERO      {0, 0, {SCAN_RESULT_INIT_ZERO, SCAN_RESULT_INIT_ZERO, SCAN_RESULT_INIT_ZERO, SCAN_RESULT_INIT_ZERO, SCAN_RESULT_INIT_ZERO, SCAN_RESULT_INIT_ZERO, SCAN_RESULT_INIT_ZERO, SCAN_RESULT_INIT_ZERO, SCAN_RESULT_INIT_ZERO, SCAN_RESULT_INIT_ZERO, SCAN_RESULT_INIT_ZERO, SCAN_RESULT_INIT_ZERO, SCAN_RESULT_INIT_ZERO, SCAN_RESULT_INIT_ZERO, SCAN_RESULT_INIT_ZERO, SCAN_RESULT_INIT_ZERO, SCAN_RESULT_INIT_ZERO, SCAN_RESULT_INIT_ZERO, SCAN_RESULT_INIT_ZERO, SCAN_RESULT_INIT_ZERO}, 0}
#define CTRL_MSG_REQ_SOFT_AP_CONNECTED_STA_INIT_ZERO {0}
#define CTRL_MSG_RESP_SOFT_AP_CONNECTED_STA_INIT_ZERO {0, 0, {}, 0}
#define CTRL_MSG_REQ_OTA_BEGIN_INIT_ZERO         {0}
#define CTRL_MSG_RESP_OTA_BEGIN_INIT_ZERO        {0}
#define CTRL_MSG_REQ_OTA_WRITE_INIT_ZERO         {{0, {0}}}
#define CTRL_MSG_RESP_OTA_WRITE_INIT_ZERO        {0}
#define CTRL_MSG_REQ_OTA_END_INIT_ZERO           {0}
#define CTRL_MSG_RESP_OTA_END_INIT_ZERO          {0}
#define CTRL_MSG_REQ_VENDOR_IE_DATA_INIT_ZERO    {0, 0, {0, {0}}, 0, {0, {0}}}
#define CTRL_MSG_REQ_SET_SOFT_AP_VENDOR_SPECIFIC_IE_INIT_ZERO {0, _CTRL_VENDOR_IE_TYPE_MIN, _CTRL_VENDOR_IEID_MIN, false, CTRL_MSG_REQ_VENDOR_IE_DATA_INIT_ZERO}
#define CTRL_MSG_RESP_SET_SOFT_AP_VENDOR_SPECIFIC_IE_INIT_ZERO {0}
#define CTRL_MSG_REQ_SET_WIFI_MAX_TX_POWER_INIT_ZERO {0}
#define CTRL_MSG_RESP_SET_WIFI_MAX_TX_POWER_INIT_ZERO {0}
#define CTRL_MSG_REQ_GET_WIFI_CURR_TX_POWER_INIT_ZERO {0}
#define CTRL_MSG_RESP_GET_WIFI_CURR_TX_POWER_INIT_ZERO {0, 0}
#define CTRL_MSG_REQ_CONFIG_HEARTBEAT_INIT_ZERO  {0, 0}
#define CTRL_MSG_RESP_CONFIG_HEARTBEAT_INIT_ZERO {0}
#define CTRL_MSG_EVENT_ESP_INIT_INIT_ZERO        {{{NULL}, NULL}}
#define CTRL_MSG_EVENT_HEARTBEAT_INIT_ZERO       {0}
#define CTRL_MSG_EVENT_STATION_DISCONNECT_FROM_AP_INIT_ZERO {0}
#define CTRL_MSG_EVENT_STATION_DISCONNECT_FROM_ESP_SOFT_AP_INIT_ZERO {0, {0, {0}}}
#define CTRL_MSG_INIT_ZERO                       {_CTRL_MSG_TYPE_MIN, _CTRL_MSG_ID_MIN, 0, {CTRL_MSG_REQ_GET_MAC_ADDRESS_INIT_ZERO}}

/* Field tags (for use in manual encoding/decoding) */
#define CTRL_MSG_EVENT_ESP_INIT_INIT_DATA_TAG    1
#define CONNECTED_STA_LIST_MAC_TAG               1
#define CONNECTED_STA_LIST_RSSI_TAG              2
#define CTRL_MSG_EVENT_HEARTBEAT_HB_NUM_TAG      1
#define CTRL_MSG_EVENT_STATION_DISCONNECT_FROM_AP_RESP_TAG 1
#define CTRL_MSG_EVENT_STATION_DISCONNECT_FROM_ESP_SOFT_AP_RESP_TAG 1
#define CTRL_MSG_EVENT_STATION_DISCONNECT_FROM_ESP_SOFT_AP_MAC_TAG 2
#define CTRL_MSG_REQ_CONFIG_HEARTBEAT_ENABLE_TAG 1
#define CTRL_MSG_REQ_CONFIG_HEARTBEAT_DURATION_TAG 2
#define CTRL_MSG_REQ_CONNECT_AP_SSID_TAG         1
#define CTRL_MSG_REQ_CONNECT_AP_PWD_TAG          2
#define CTRL_MSG_REQ_CONNECT_AP_BSSID_TAG        3
#define CTRL_MSG_REQ_CONNECT_AP_IS_WPA3_SUPPORTED_TAG 4
#define CTRL_MSG_REQ_CONNECT_AP_LISTEN_INTERVAL_TAG 5
#define CTRL_MSG_REQ_GET_MAC_ADDRESS_MODE_TAG    1
#define CTRL_MSG_REQ_OTA_WRITE_OTA_DATA_TAG      1
#define CTRL_MSG_REQ_SET_MAC_ADDRESS_MAC_TAG     1
#define CTRL_MSG_REQ_SET_MAC_ADDRESS_MODE_TAG    2
#define CTRL_MSG_REQ_SET_MODE_MODE_TAG           1
#define CTRL_MSG_REQ_SET_WIFI_MAX_TX_POWER_WIFI_MAX_TX_POWER_TAG 1
#define CTRL_MSG_REQ_START_SOFT_AP_SSID_TAG      1
#define CTRL_MSG_REQ_START_SOFT_AP_PWD_TAG       2
#define CTRL_MSG_REQ_START_SOFT_AP_CHNL_TAG      3
#define CTRL_MSG_REQ_START_SOFT_AP_SEC_PROT_TAG  4
#define CTRL_MSG_REQ_START_SOFT_AP_MAX_CONN_TAG  5
#define CTRL_MSG_REQ_START_SOFT_AP_SSID_HIDDEN_TAG 6
#define CTRL_MSG_REQ_START_SOFT_AP_BW_TAG        7
#define CTRL_MSG_REQ_VENDOR_IE_DATA_ELEMENT_ID_TAG 1
#define CTRL_MSG_REQ_VENDOR_IE_DATA_LENGTH_TAG   2
#define CTRL_MSG_REQ_VENDOR_IE_DATA_VENDOR_OUI_TAG 3
#define CTRL_MSG_REQ_VENDOR_IE_DATA_VENDOR_OUI_TYPE_TAG 4
#define CTRL_MSG_REQ_VENDOR_IE_DATA_PAYLOAD_TAG  5
#define CTRL_MSG_RESP_CONFIG_HEARTBEAT_RESP_TAG  1
#define CTRL_MSG_RESP_CONNECT_AP_RESP_TAG        1
#define CTRL_MSG_RESP_CONNECT_AP_MAC_TAG         2
#define CTRL_MSG_RESP_GET_AP_CONFIG_SSID_TAG     1
#define CTRL_MSG_RESP_GET_AP_CONFIG_BSSID_TAG    2
#define CTRL_MSG_RESP_GET_AP_CONFIG_RSSI_TAG     3
#define CTRL_MSG_RESP_GET_AP_CONFIG_CHNL_TAG     4
#define CTRL_MSG_RESP_GET_AP_CONFIG_SEC_PROT_TAG 5
#define CTRL_MSG_RESP_GET_AP_CONFIG_RESP_TAG     6
#define CTRL_MSG_RESP_GET_MAC_ADDRESS_MAC_TAG    1
#define CTRL_MSG_RESP_GET_MAC_ADDRESS_RESP_TAG   2
#define CTRL_MSG_RESP_GET_MODE_MODE_TAG          1
#define CTRL_MSG_RESP_GET_MODE_RESP_TAG          2
#define CTRL_MSG_RESP_GET_SOFT_AP_CONFIG_SSID_TAG 1
#define CTRL_MSG_RESP_GET_SOFT_AP_CONFIG_PWD_TAG 2
#define CTRL_MSG_RESP_GET_SOFT_AP_CONFIG_CHNL_TAG 3
#define CTRL_MSG_RESP_GET_SOFT_AP_CONFIG_SEC_PROT_TAG 4
#define CTRL_MSG_RESP_GET_SOFT_AP_CONFIG_MAX_CONN_TAG 5
#define CTRL_MSG_RESP_GET_SOFT_AP_CONFIG_SSID_HIDDEN_TAG 6
#define CTRL_MSG_RESP_GET_SOFT_AP_CONFIG_BW_TAG  7
#define CTRL_MSG_RESP_GET_SOFT_AP_CONFIG_RESP_TAG 8
#define CTRL_MSG_RESP_GET_STATUS_RESP_TAG        1
#define CTRL_MSG_RESP_GET_WIFI_CURR_TX_POWER_WIFI_CURR_TX_POWER_TAG 1
#define CTRL_MSG_RESP_GET_WIFI_CURR_TX_POWER_RESP_TAG 2
#define CTRL_MSG_RESP_OTA_BEGIN_RESP_TAG         1
#define CTRL_MSG_RESP_OTA_END_RESP_TAG           1
#define CTRL_MSG_RESP_OTA_WRITE_RESP_TAG         1
#define CTRL_MSG_RESP_SET_MAC_ADDRESS_RESP_TAG   1
#define CTRL_MSG_RESP_SET_MODE_RESP_TAG          1
#define CTRL_MSG_RESP_SET_SOFT_AP_VENDOR_SPECIFIC_IE_RESP_TAG 1
#define CTRL_MSG_RESP_SET_WIFI_MAX_TX_POWER_RESP_TAG 1
#define CTRL_MSG_RESP_START_SOFT_AP_RESP_TAG     1
#define CTRL_MSG_RESP_START_SOFT_AP_MAC_TAG      2
#define SCAN_RESULT_SSID_TAG                     1
#define SCAN_RESULT_CHNL_TAG                     2
#define SCAN_RESULT_RSSI_TAG                     3
#define SCAN_RESULT_BSSID_TAG                    4
#define SCAN_RESULT_SEC_PROT_TAG                 5
#define CTRL_MSG_REQ_SET_SOFT_AP_VENDOR_SPECIFIC_IE_ENABLE_TAG 1
#define CTRL_MSG_REQ_SET_SOFT_AP_VENDOR_SPECIFIC_IE_TYPE_TAG 2
#define CTRL_MSG_REQ_SET_SOFT_AP_VENDOR_SPECIFIC_IE_IDX_TAG 3
#define CTRL_MSG_REQ_SET_SOFT_AP_VENDOR_SPECIFIC_IE_VENDOR_IE_DATA_TAG 4
#define CTRL_MSG_RESP_SCAN_RESULT_COUNT_TAG      1
#define CTRL_MSG_RESP_SCAN_RESULT_ENTRIES_TAG    2
#define CTRL_MSG_RESP_SCAN_RESULT_RESP_TAG       3
#define CTRL_MSG_RESP_SOFT_AP_CONNECTED_STA_NUM_TAG 1
#define CTRL_MSG_RESP_SOFT_AP_CONNECTED_STA_STATIONS_TAG 2
#define CTRL_MSG_RESP_SOFT_AP_CONNECTED_STA_RESP_TAG 3
#define CTRL_MSG_MSG_TYPE_TAG                    1
#define CTRL_MSG_MSG_ID_TAG                      2
#define CTRL_MSG_REQ_GET_MAC_ADDRESS_TAG         101
#define CTRL_MSG_REQ_SET_MAC_ADDRESS_TAG         102
#define CTRL_MSG_REQ_GET_WIFI_MODE_TAG           103
#define CTRL_MSG_REQ_SET_WIFI_MODE_TAG           104
#define CTRL_MSG_REQ_SCAN_AP_LIST_TAG            105
#define CTRL_MSG_REQ_GET_AP_CONFIG_TAG           106
#define CTRL_MSG_REQ_CONNECT_AP_TAG              107
#define CTRL_MSG_REQ_DISCONNECT_AP_TAG           108
#define CTRL_MSG_REQ_GET_SOFTAP_CONFIG_TAG       109
#define CTRL_MSG_REQ_SET_SOFTAP_VENDOR_SPECIFIC_IE_TAG 110
#define CTRL_MSG_REQ_START_SOFTAP_TAG            111
#define CTRL_MSG_REQ_SOFTAP_CONNECTED_STAS_LIST_TAG 112
#define CTRL_MSG_REQ_STOP_SOFTAP_TAG             113
#define CTRL_MSG_REQ_SET_POWER_SAVE_MODE_TAG     114
#define CTRL_MSG_REQ_GET_POWER_SAVE_MODE_TAG     115
#define CTRL_MSG_REQ_OTA_BEGIN_TAG               116
#define CTRL_MSG_REQ_OTA_WRITE_TAG               117
#define CTRL_MSG_REQ_OTA_END_TAG                 118
#define CTRL_MSG_REQ_SET_WIFI_MAX_TX_POWER_TAG   119
#define CTRL_MSG_REQ_GET_WIFI_CURR_TX_POWER_TAG  120
#define CTRL_MSG_REQ_CONFIG_HEARTBEAT_TAG        121
#define CTRL_MSG_RESP_GET_MAC_ADDRESS_TAG        201
#define CTRL_MSG_RESP_SET_MAC_ADDRESS_TAG        202
#define CTRL_MSG_RESP_GET_WIFI_MODE_TAG          203
#define CTRL_MSG_RESP_SET_WIFI_MODE_TAG          204
#define CTRL_MSG_RESP_SCAN_AP_LIST_TAG           205
#define CTRL_MSG_RESP_GET_AP_CONFIG_TAG          206
#define CTRL_MSG_RESP_CONNECT_AP_TAG             207
#define CTRL_MSG_RESP_DISCONNECT_AP_TAG          208
#define CTRL_MSG_RESP_GET_SOFTAP_CONFIG_TAG      209
#define CTRL_MSG_RESP_SET_SOFTAP_VENDOR_SPECIFIC_IE_TAG 210
#define CTRL_MSG_RESP_START_SOFTAP_TAG           211
#define CTRL_MSG_RESP_SOFTAP_CONNECTED_STAS_LIST_TAG 212
#define CTRL_MSG_RESP_STOP_SOFTAP_TAG            213
#define CTRL_MSG_RESP_SET_POWER_SAVE_MODE_TAG    214
#define CTRL_MSG_RESP_GET_POWER_SAVE_MODE_TAG    215
#define CTRL_MSG_RESP_OTA_BEGIN_TAG              216
#define CTRL_MSG_RESP_OTA_WRITE_TAG              217
#define CTRL_MSG_RESP_OTA_END_TAG                218
#define CTRL_MSG_RESP_SET_WIFI_MAX_TX_POWER_TAG  219
#define CTRL_MSG_RESP_GET_WIFI_CURR_TX_POWER_TAG 220
#define CTRL_MSG_RESP_CONFIG_HEARTBEAT_TAG       221
#define CTRL_MSG_EVENT_ESP_INIT_TAG              301
#define CTRL_MSG_EVENT_HEARTBEAT_TAG             302
#define CTRL_MSG_EVENT_STATION_DISCONNECT_FROM_AP_TAG 303
#define CTRL_MSG_EVENT_STATION_DISCONNECT_FROM_ESP_SOFT_AP_TAG 304

/* Struct field encoding specification for nanopb */
#define SCAN_RESULT_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BYTES,    ssid,              1) \
X(a, STATIC,   SINGULAR, UINT32,   chnl,              2) \
X(a, STATIC,   SINGULAR, INT32,    rssi,              3) \
X(a, STATIC,   SINGULAR, BYTES,    bssid,             4) \
X(a, STATIC,   SINGULAR, UENUM,    sec_prot,          5)
#define SCAN_RESULT_CALLBACK NULL
#define SCAN_RESULT_DEFAULT NULL

#define CONNECTED_STA_LIST_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BYTES,    mac,               1) \
X(a, STATIC,   SINGULAR, INT32,    rssi,              2)
#define CONNECTED_STA_LIST_CALLBACK NULL
#define CONNECTED_STA_LIST_DEFAULT NULL

#define CTRL_MSG_REQ_GET_MAC_ADDRESS_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    mode,              1)
#define CTRL_MSG_REQ_GET_MAC_ADDRESS_CALLBACK NULL
#define CTRL_MSG_REQ_GET_MAC_ADDRESS_DEFAULT NULL

#define CTRL_MSG_RESP_GET_MAC_ADDRESS_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BYTES,    mac,               1) \
X(a, STATIC,   SINGULAR, INT32,    resp,              2)
#define CTRL_MSG_RESP_GET_MAC_ADDRESS_CALLBACK NULL
#define CTRL_MSG_RESP_GET_MAC_ADDRESS_DEFAULT NULL

#define CTRL_MSG_REQ_GET_MODE_FIELDLIST(X, a) \

#define CTRL_MSG_REQ_GET_MODE_CALLBACK NULL
#define CTRL_MSG_REQ_GET_MODE_DEFAULT NULL

#define CTRL_MSG_RESP_GET_MODE_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    mode,              1) \
X(a, STATIC,   SINGULAR, INT32,    resp,              2)
#define CTRL_MSG_RESP_GET_MODE_CALLBACK NULL
#define CTRL_MSG_RESP_GET_MODE_DEFAULT NULL

#define CTRL_MSG_REQ_SET_MODE_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    mode,              1)
#define CTRL_MSG_REQ_SET_MODE_CALLBACK NULL
#define CTRL_MSG_REQ_SET_MODE_DEFAULT NULL

#define CTRL_MSG_RESP_SET_MODE_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    resp,              1)
#define CTRL_MSG_RESP_SET_MODE_CALLBACK NULL
#define CTRL_MSG_RESP_SET_MODE_DEFAULT NULL

#define CTRL_MSG_REQ_GET_STATUS_FIELDLIST(X, a) \

#define CTRL_MSG_REQ_GET_STATUS_CALLBACK NULL
#define CTRL_MSG_REQ_GET_STATUS_DEFAULT NULL

#define CTRL_MSG_RESP_GET_STATUS_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    resp,              1)
#define CTRL_MSG_RESP_GET_STATUS_CALLBACK NULL
#define CTRL_MSG_RESP_GET_STATUS_DEFAULT NULL

#define CTRL_MSG_REQ_SET_MAC_ADDRESS_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BYTES,    mac,               1) \
X(a, STATIC,   SINGULAR, INT32,    mode,              2)
#define CTRL_MSG_REQ_SET_MAC_ADDRESS_CALLBACK NULL
#define CTRL_MSG_REQ_SET_MAC_ADDRESS_DEFAULT NULL

#define CTRL_MSG_RESP_SET_MAC_ADDRESS_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    resp,              1)
#define CTRL_MSG_RESP_SET_MAC_ADDRESS_CALLBACK NULL
#define CTRL_MSG_RESP_SET_MAC_ADDRESS_DEFAULT NULL

#define CTRL_MSG_REQ_GET_AP_CONFIG_FIELDLIST(X, a) \

#define CTRL_MSG_REQ_GET_AP_CONFIG_CALLBACK NULL
#define CTRL_MSG_REQ_GET_AP_CONFIG_DEFAULT NULL

#define CTRL_MSG_RESP_GET_AP_CONFIG_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BYTES,    ssid,              1) \
X(a, STATIC,   SINGULAR, BYTES,    bssid,             2) \
X(a, STATIC,   SINGULAR, INT32,    rssi,              3) \
X(a, STATIC,   SINGULAR, INT32,    chnl,              4) \
X(a, STATIC,   SINGULAR, UENUM,    sec_prot,          5) \
X(a, STATIC,   SINGULAR, INT32,    resp,              6)
#define CTRL_MSG_RESP_GET_AP_CONFIG_CALLBACK NULL
#define CTRL_MSG_RESP_GET_AP_CONFIG_DEFAULT NULL

#define CTRL_MSG_REQ_CONNECT_AP_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, STRING,   ssid,              1) \
X(a, STATIC,   SINGULAR, STRING,   pwd,               2) \
X(a, STATIC,   SINGULAR, STRING,   bssid,             3) \
X(a, STATIC,   SINGULAR, BOOL,     is_wpa3_supported,   4) \
X(a, STATIC,   SINGULAR, INT32,    listen_interval,   5)
#define CTRL_MSG_REQ_CONNECT_AP_CALLBACK NULL
#define CTRL_MSG_REQ_CONNECT_AP_DEFAULT NULL

#define CTRL_MSG_RESP_CONNECT_AP_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    resp,              1) \
X(a, STATIC,   SINGULAR, BYTES,    mac,               2)
#define CTRL_MSG_RESP_CONNECT_AP_CALLBACK NULL
#define CTRL_MSG_RESP_CONNECT_AP_DEFAULT NULL

#define CTRL_MSG_REQ_GET_SOFT_AP_CONFIG_FIELDLIST(X, a) \

#define CTRL_MSG_REQ_GET_SOFT_AP_CONFIG_CALLBACK NULL
#define CTRL_MSG_REQ_GET_SOFT_AP_CONFIG_DEFAULT NULL

#define CTRL_MSG_RESP_GET_SOFT_AP_CONFIG_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BYTES,    ssid,              1) \
X(a, STATIC,   SINGULAR, BYTES,    pwd,               2) \
X(a, STATIC,   SINGULAR, INT32,    chnl,              3) \
X(a, STATIC,   SINGULAR, UENUM,    sec_prot,          4) \
X(a, STATIC,   SINGULAR, INT32,    max_conn,          5) \
X(a, STATIC,   SINGULAR, BOOL,     ssid_hidden,       6) \
X(a, STATIC,   SINGULAR, INT32,    bw,                7) \
X(a, STATIC,   SINGULAR, INT32,    resp,              8)
#define CTRL_MSG_RESP_GET_SOFT_AP_CONFIG_CALLBACK NULL
#define CTRL_MSG_RESP_GET_SOFT_AP_CONFIG_DEFAULT NULL

#define CTRL_MSG_REQ_START_SOFT_AP_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, STRING,   ssid,              1) \
X(a, STATIC,   SINGULAR, STRING,   pwd,               2) \
X(a, STATIC,   SINGULAR, INT32,    chnl,              3) \
X(a, STATIC,   SINGULAR, UENUM,    sec_prot,          4) \
X(a, STATIC,   SINGULAR, INT32,    max_conn,          5) \
X(a, STATIC,   SINGULAR, BOOL,     ssid_hidden,       6) \
X(a, STATIC,   SINGULAR, INT32,    bw,                7)
#define CTRL_MSG_REQ_START_SOFT_AP_CALLBACK NULL
#define CTRL_MSG_REQ_START_SOFT_AP_DEFAULT NULL

#define CTRL_MSG_RESP_START_SOFT_AP_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    resp,              1) \
X(a, STATIC,   SINGULAR, BYTES,    mac,               2)
#define CTRL_MSG_RESP_START_SOFT_AP_CALLBACK NULL
#define CTRL_MSG_RESP_START_SOFT_AP_DEFAULT NULL

#define CTRL_MSG_REQ_SCAN_RESULT_FIELDLIST(X, a) \

#define CTRL_MSG_REQ_SCAN_RESULT_CALLBACK NULL
#define CTRL_MSG_REQ_SCAN_RESULT_DEFAULT NULL

#define CTRL_MSG_RESP_SCAN_RESULT_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   count,             1) \
X(a, STATIC,   REPEATED, MESSAGE,  entries,           2) \
X(a, STATIC,   SINGULAR, INT32,    resp,              3)
#define CTRL_MSG_RESP_SCAN_RESULT_CALLBACK NULL
#define CTRL_MSG_RESP_SCAN_RESULT_DEFAULT NULL
#define ctrl_msg_resp_scan_result_t_entries_MSGTYPE scan_result_t

#define CTRL_MSG_REQ_SOFT_AP_CONNECTED_STA_FIELDLIST(X, a) \

#define CTRL_MSG_REQ_SOFT_AP_CONNECTED_STA_CALLBACK NULL
#define CTRL_MSG_REQ_SOFT_AP_CONNECTED_STA_DEFAULT NULL

#define CTRL_MSG_RESP_SOFT_AP_CONNECTED_STA_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   num,               1) \
X(a, STATIC,   REPEATED, MESSAGE,  stations,          2) \
X(a, STATIC,   SINGULAR, INT32,    resp,              3)
#define CTRL_MSG_RESP_SOFT_AP_CONNECTED_STA_CALLBACK NULL
#define CTRL_MSG_RESP_SOFT_AP_CONNECTED_STA_DEFAULT NULL
#define ctrl_msg_resp_soft_ap_connected_sta_t_stations_MSGTYPE connected_sta_list_t

#define CTRL_MSG_REQ_OTA_BEGIN_FIELDLIST(X, a) \

#define CTRL_MSG_REQ_OTA_BEGIN_CALLBACK NULL
#define CTRL_MSG_REQ_OTA_BEGIN_DEFAULT NULL

#define CTRL_MSG_RESP_OTA_BEGIN_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    resp,              1)
#define CTRL_MSG_RESP_OTA_BEGIN_CALLBACK NULL
#define CTRL_MSG_RESP_OTA_BEGIN_DEFAULT NULL

#define CTRL_MSG_REQ_OTA_WRITE_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BYTES,    ota_data,          1)
#define CTRL_MSG_REQ_OTA_WRITE_CALLBACK NULL
#define CTRL_MSG_REQ_OTA_WRITE_DEFAULT NULL

#define CTRL_MSG_RESP_OTA_WRITE_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    resp,              1)
#define CTRL_MSG_RESP_OTA_WRITE_CALLBACK NULL
#define CTRL_MSG_RESP_OTA_WRITE_DEFAULT NULL

#define CTRL_MSG_REQ_OTA_END_FIELDLIST(X, a) \

#define CTRL_MSG_REQ_OTA_END_CALLBACK NULL
#define CTRL_MSG_REQ_OTA_END_DEFAULT NULL

#define CTRL_MSG_RESP_OTA_END_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    resp,              1)
#define CTRL_MSG_RESP_OTA_END_CALLBACK NULL
#define CTRL_MSG_RESP_OTA_END_DEFAULT NULL

#define CTRL_MSG_REQ_VENDOR_IE_DATA_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    element_id,        1) \
X(a, STATIC,   SINGULAR, INT32,    length,            2) \
X(a, STATIC,   SINGULAR, BYTES,    vendor_oui,        3) \
X(a, STATIC,   SINGULAR, INT32,    vendor_oui_type,   4) \
X(a, STATIC,   SINGULAR, BYTES,    payload,           5)
#define CTRL_MSG_REQ_VENDOR_IE_DATA_CALLBACK NULL
#define CTRL_MSG_REQ_VENDOR_IE_DATA_DEFAULT NULL

#define CTRL_MSG_REQ_SET_SOFT_AP_VENDOR_SPECIFIC_IE_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     enable,            1) \
X(a, STATIC,   SINGULAR, UENUM,    type,              2) \
X(a, STATIC,   SINGULAR, UENUM,    idx,               3) \
X(a, STATIC,   OPTIONAL, MESSAGE,  vendor_ie_data,    4)
#define CTRL_MSG_REQ_SET_SOFT_AP_VENDOR_SPECIFIC_IE_CALLBACK NULL
#define CTRL_MSG_REQ_SET_SOFT_AP_VENDOR_SPECIFIC_IE_DEFAULT NULL
#define ctrl_msg_req_set_soft_ap_vendor_specific_ie_t_vendor_ie_data_MSGTYPE ctrl_msg_req_vendor_ie_data_t

#define CTRL_MSG_RESP_SET_SOFT_AP_VENDOR_SPECIFIC_IE_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    resp,              1)
#define CTRL_MSG_RESP_SET_SOFT_AP_VENDOR_SPECIFIC_IE_CALLBACK NULL
#define CTRL_MSG_RESP_SET_SOFT_AP_VENDOR_SPECIFIC_IE_DEFAULT NULL

#define CTRL_MSG_REQ_SET_WIFI_MAX_TX_POWER_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    wifi_max_tx_power,   1)
#define CTRL_MSG_REQ_SET_WIFI_MAX_TX_POWER_CALLBACK NULL
#define CTRL_MSG_REQ_SET_WIFI_MAX_TX_POWER_DEFAULT NULL

#define CTRL_MSG_RESP_SET_WIFI_MAX_TX_POWER_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    resp,              1)
#define CTRL_MSG_RESP_SET_WIFI_MAX_TX_POWER_CALLBACK NULL
#define CTRL_MSG_RESP_SET_WIFI_MAX_TX_POWER_DEFAULT NULL

#define CTRL_MSG_REQ_GET_WIFI_CURR_TX_POWER_FIELDLIST(X, a) \

#define CTRL_MSG_REQ_GET_WIFI_CURR_TX_POWER_CALLBACK NULL
#define CTRL_MSG_REQ_GET_WIFI_CURR_TX_POWER_DEFAULT NULL

#define CTRL_MSG_RESP_GET_WIFI_CURR_TX_POWER_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    wifi_curr_tx_power,   1) \
X(a, STATIC,   SINGULAR, INT32,    resp,              2)
#define CTRL_MSG_RESP_GET_WIFI_CURR_TX_POWER_CALLBACK NULL
#define CTRL_MSG_RESP_GET_WIFI_CURR_TX_POWER_DEFAULT NULL

#define CTRL_MSG_REQ_CONFIG_HEARTBEAT_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     enable,            1) \
X(a, STATIC,   SINGULAR, INT32,    duration,          2)
#define CTRL_MSG_REQ_CONFIG_HEARTBEAT_CALLBACK NULL
#define CTRL_MSG_REQ_CONFIG_HEARTBEAT_DEFAULT NULL

#define CTRL_MSG_RESP_CONFIG_HEARTBEAT_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    resp,              1)
#define CTRL_MSG_RESP_CONFIG_HEARTBEAT_CALLBACK NULL
#define CTRL_MSG_RESP_CONFIG_HEARTBEAT_DEFAULT NULL

#define CTRL_MSG_EVENT_ESP_INIT_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, BYTES,    init_data,         1)
#define CTRL_MSG_EVENT_ESP_INIT_CALLBACK pb_default_field_callback
#define CTRL_MSG_EVENT_ESP_INIT_DEFAULT NULL

#define CTRL_MSG_EVENT_HEARTBEAT_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    hb_num,            1)
#define CTRL_MSG_EVENT_HEARTBEAT_CALLBACK NULL
#define CTRL_MSG_EVENT_HEARTBEAT_DEFAULT NULL

#define CTRL_MSG_EVENT_STATION_DISCONNECT_FROM_AP_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    resp,              1)
#define CTRL_MSG_EVENT_STATION_DISCONNECT_FROM_AP_CALLBACK NULL
#define CTRL_MSG_EVENT_STATION_DISCONNECT_FROM_AP_DEFAULT NULL

#define CTRL_MSG_EVENT_STATION_DISCONNECT_FROM_ESP_SOFT_AP_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    resp,              1) \
X(a, STATIC,   SINGULAR, BYTES,    mac,               2)
#define CTRL_MSG_EVENT_STATION_DISCONNECT_FROM_ESP_SOFT_AP_CALLBACK NULL
#define CTRL_MSG_EVENT_STATION_DISCONNECT_FROM_ESP_SOFT_AP_DEFAULT NULL

#define CTRL_MSG_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    msg_type,          1) \
X(a, STATIC,   SINGULAR, UENUM,    msg_id,            2) \
X(a, STATIC,   ONEOF,    MESSAGE,  (payload,req_get_mac_address,payload.req_get_mac_address), 101) \
X(a, STATIC,   ONEOF,    MESSAGE,  (payload,req_set_mac_address,payload.req_set_mac_address), 102) \
X(a, STATIC,   ONEOF,    MESSAGE,  (payload,req_get_wifi_mode,payload.req_get_wifi_mode), 103) \
X(a, STATIC,   ONEOF,    MESSAGE,  (payload,req_set_wifi_mode,payload.req_set_wifi_mode), 104) \
X(a, STATIC,   ONEOF,    MESSAGE,  (payload,req_scan_ap_list,payload.req_scan_ap_list), 105) \
X(a, STATIC,   ONEOF,    MESSAGE,  (payload,req_get_ap_config,payload.req_get_ap_config), 106) \
X(a, STATIC,   ONEOF,    MESSAGE,  (payload,req_connect_ap,payload.req_connect_ap), 107) \
X(a, STATIC,   ONEOF,    MESSAGE,  (payload,req_disconnect_ap,payload.req_disconnect_ap), 108) \
X(a, STATIC,   ONEOF,    MESSAGE,  (payload,req_get_softap_config,payload.req_get_softap_config), 109) \
X(a, STATIC,   ONEOF,    MESSAGE,  (payload,req_set_softap_vendor_specific_ie,payload.req_set_softap_vendor_specific_ie), 110) \
X(a, STATIC,   ONEOF,    MESSAGE,  (payload,req_start_softap,payload.req_start_softap), 111) \
X(a, STATIC,   ONEOF,    MESSAGE,  (payload,req_softap_connected_stas_list,payload.req_softap_connected_stas_list), 112) \
X(a, STATIC,   ONEOF,    MESSAGE,  (payload,req_stop_softap,payload.req_stop_softap), 113) \
X(a, STATIC,   ONEOF,    MESSAGE,  (payload,req_set_power_save_mode,payload.req_set_power_save_mode), 114) \
X(a, STATIC,   ONEOF,    MESSAGE,  (payload,req_get_power_save_mode,payload.req_get_power_save_mode), 115) \
X(a, STATIC,   ONEOF,    MESSAGE,  (payload,req_ota_begin,payload.req_ota_begin), 116) \
X(a, STATIC,   ONEOF,    MESSAGE,  (payload,req_ota_write,payload.req_ota_write), 117) \
X(a, STATIC,   ONEOF,    MESSAGE,  (payload,req_ota_end,payload.req_ota_end), 118) \
X(a, STATIC,   ONEOF,    MESSAGE,  (payload,req_set_wifi_max_tx_power,payload.req_set_wifi_max_tx_power), 119) \
X(a, STATIC,   ONEOF,    MESSAGE,  (payload,req_get_wifi_curr_tx_power,payload.req_get_wifi_curr_tx_power), 120) \
X(a, STATIC,   ONEOF,    MESSAGE,  (payload,req_config_heartbeat,payload.req_config_heartbeat), 121) \
X(a, STATIC,   ONEOF,    MESSAGE,  (payload,resp_get_mac_address,payload.resp_get_mac_address), 201) \
X(a, STATIC,   ONEOF,    MESSAGE,  (payload,resp_set_mac_address,payload.resp_set_mac_address), 202) \
X(a, STATIC,   ONEOF,    MESSAGE,  (payload,resp_get_wifi_mode,payload.resp_get_wifi_mode), 203) \
X(a, STATIC,   ONEOF,    MESSAGE,  (payload,resp_set_wifi_mode,payload.resp_set_wifi_mode), 204) \
X(a, STATIC,   ONEOF,    MESSAGE,  (payload,resp_scan_ap_list,payload.resp_scan_ap_list), 205) \
X(a, STATIC,   ONEOF,    MESSAGE,  (payload,resp_get_ap_config,payload.resp_get_ap_config), 206) \
X(a, STATIC,   ONEOF,    MESSAGE,  (payload,resp_connect_ap,payload.resp_connect_ap), 207) \
X(a, STATIC,   ONEOF,    MESSAGE,  (payload,resp_disconnect_ap,payload.resp_disconnect_ap), 208) \
X(a, STATIC,   ONEOF,    MESSAGE,  (payload,resp_get_softap_config,payload.resp_get_softap_config), 209) \
X(a, STATIC,   ONEOF,    MESSAGE,  (payload,resp_set_softap_vendor_specific_ie,payload.resp_set_softap_vendor_specific_ie), 210) \
X(a, STATIC,   ONEOF,    MESSAGE,  (payload,resp_start_softap,payload.resp_start_softap), 211) \
X(a, STATIC,   ONEOF,    MESSAGE,  (payload,resp_softap_connected_stas_list,payload.resp_softap_connected_stas_list), 212) \
X(a, STATIC,   ONEOF,    MESSAGE,  (payload,resp_stop_softap,payload.resp_stop_softap), 213) \
X(a, STATIC,   ONEOF,    MESSAGE,  (payload,resp_set_power_save_mode,payload.resp_set_power_save_mode), 214) \
X(a, STATIC,   ONEOF,    MESSAGE,  (payload,resp_get_power_save_mode,payload.resp_get_power_save_mode), 215) \
X(a, STATIC,   ONEOF,    MESSAGE,  (payload,resp_ota_begin,payload.resp_ota_begin), 216) \
X(a, STATIC,   ONEOF,    MESSAGE,  (payload,resp_ota_write,payload.resp_ota_write), 217) \
X(a, STATIC,   ONEOF,    MESSAGE,  (payload,resp_ota_end,payload.resp_ota_end), 218) \
X(a, STATIC,   ONEOF,    MESSAGE,  (payload,resp_set_wifi_max_tx_power,payload.resp_set_wifi_max_tx_power), 219) \
X(a, STATIC,   ONEOF,    MESSAGE,  (payload,resp_get_wifi_curr_tx_power,payload.resp_get_wifi_curr_tx_power), 220) \
X(a, STATIC,   ONEOF,    MESSAGE,  (payload,resp_config_heartbeat,payload.resp_config_heartbeat), 221) \
X(a, STATIC,   ONEOF,    MESSAGE,  (payload,event_esp_init,payload.event_esp_init), 301) \
X(a, STATIC,   ONEOF,    MESSAGE,  (payload,event_heartbeat,payload.event_heartbeat), 302) \
X(a, STATIC,   ONEOF,    MESSAGE,  (payload,event_station_disconnect_from_ap,payload.event_station_disconnect_from_ap), 303) \
X(a, STATIC,   ONEOF,    MESSAGE,  (payload,event_station_disconnect_from_esp_soft_ap,payload.event_station_disconnect_from_esp_soft_ap), 304)
#define CTRL_MSG_CALLBACK NULL
#define CTRL_MSG_DEFAULT NULL
#define ctrl_msg_t_payload_req_get_mac_address_MSGTYPE ctrl_msg_req_get_mac_address_t
#define ctrl_msg_t_payload_req_set_mac_address_MSGTYPE ctrl_msg_req_set_mac_address_t
#define ctrl_msg_t_payload_req_get_wifi_mode_MSGTYPE ctrl_msg_req_get_mode_t
#define ctrl_msg_t_payload_req_set_wifi_mode_MSGTYPE ctrl_msg_req_set_mode_t
#define ctrl_msg_t_payload_req_scan_ap_list_MSGTYPE ctrl_msg_req_scan_result_t
#define ctrl_msg_t_payload_req_get_ap_config_MSGTYPE ctrl_msg_req_get_ap_config_t
#define ctrl_msg_t_payload_req_connect_ap_MSGTYPE ctrl_msg_req_connect_ap_t
#define ctrl_msg_t_payload_req_disconnect_ap_MSGTYPE ctrl_msg_req_get_status_t
#define ctrl_msg_t_payload_req_get_softap_config_MSGTYPE ctrl_msg_req_get_soft_ap_config_t
#define ctrl_msg_t_payload_req_set_softap_vendor_specific_ie_MSGTYPE ctrl_msg_req_set_soft_ap_vendor_specific_ie_t
#define ctrl_msg_t_payload_req_start_softap_MSGTYPE ctrl_msg_req_start_soft_ap_t
#define ctrl_msg_t_payload_req_softap_connected_stas_list_MSGTYPE ctrl_msg_req_soft_ap_connected_sta_t
#define ctrl_msg_t_payload_req_stop_softap_MSGTYPE ctrl_msg_req_get_status_t
#define ctrl_msg_t_payload_req_set_power_save_mode_MSGTYPE ctrl_msg_req_set_mode_t
#define ctrl_msg_t_payload_req_get_power_save_mode_MSGTYPE ctrl_msg_req_get_mode_t
#define ctrl_msg_t_payload_req_ota_begin_MSGTYPE ctrl_msg_req_ota_begin_t
#define ctrl_msg_t_payload_req_ota_write_MSGTYPE ctrl_msg_req_ota_write_t
#define ctrl_msg_t_payload_req_ota_end_MSGTYPE ctrl_msg_req_ota_end_t
#define ctrl_msg_t_payload_req_set_wifi_max_tx_power_MSGTYPE ctrl_msg_req_set_wifi_max_tx_power_t
#define ctrl_msg_t_payload_req_get_wifi_curr_tx_power_MSGTYPE ctrl_msg_req_get_wifi_curr_tx_power_t
#define ctrl_msg_t_payload_req_config_heartbeat_MSGTYPE ctrl_msg_req_config_heartbeat_t
#define ctrl_msg_t_payload_resp_get_mac_address_MSGTYPE ctrl_msg_resp_get_mac_address_t
#define ctrl_msg_t_payload_resp_set_mac_address_MSGTYPE ctrl_msg_resp_set_mac_address_t
#define ctrl_msg_t_payload_resp_get_wifi_mode_MSGTYPE ctrl_msg_resp_get_mode_t
#define ctrl_msg_t_payload_resp_set_wifi_mode_MSGTYPE ctrl_msg_resp_set_mode_t
#define ctrl_msg_t_payload_resp_scan_ap_list_MSGTYPE ctrl_msg_resp_scan_result_t
#define ctrl_msg_t_payload_resp_get_ap_config_MSGTYPE ctrl_msg_resp_get_ap_config_t
#define ctrl_msg_t_payload_resp_connect_ap_MSGTYPE ctrl_msg_resp_connect_ap_t
#define ctrl_msg_t_payload_resp_disconnect_ap_MSGTYPE ctrl_msg_resp_get_status_t
#define ctrl_msg_t_payload_resp_get_softap_config_MSGTYPE ctrl_msg_resp_get_soft_ap_config_t
#define ctrl_msg_t_payload_resp_set_softap_vendor_specific_ie_MSGTYPE ctrl_msg_resp_set_soft_ap_vendor_specific_ie_t
#define ctrl_msg_t_payload_resp_start_softap_MSGTYPE ctrl_msg_resp_start_soft_ap_t
#define ctrl_msg_t_payload_resp_softap_connected_stas_list_MSGTYPE ctrl_msg_resp_soft_ap_connected_sta_t
#define ctrl_msg_t_payload_resp_stop_softap_MSGTYPE ctrl_msg_resp_get_status_t
#define ctrl_msg_t_payload_resp_set_power_save_mode_MSGTYPE ctrl_msg_resp_set_mode_t
#define ctrl_msg_t_payload_resp_get_power_save_mode_MSGTYPE ctrl_msg_resp_get_mode_t
#define ctrl_msg_t_payload_resp_ota_begin_MSGTYPE ctrl_msg_resp_ota_begin_t
#define ctrl_msg_t_payload_resp_ota_write_MSGTYPE ctrl_msg_resp_ota_write_t
#define ctrl_msg_t_payload_resp_ota_end_MSGTYPE ctrl_msg_resp_ota_end_t
#define ctrl_msg_t_payload_resp_set_wifi_max_tx_power_MSGTYPE ctrl_msg_resp_set_wifi_max_tx_power_t
#define ctrl_msg_t_payload_resp_get_wifi_curr_tx_power_MSGTYPE ctrl_msg_resp_get_wifi_curr_tx_power_t
#define ctrl_msg_t_payload_resp_config_heartbeat_MSGTYPE ctrl_msg_resp_config_heartbeat_t
#define ctrl_msg_t_payload_event_esp_init_MSGTYPE ctrl_msg_event_esp_init_t
#define ctrl_msg_t_payload_event_heartbeat_MSGTYPE ctrl_msg_event_heartbeat_t
#define ctrl_msg_t_payload_event_station_disconnect_from_ap_MSGTYPE ctrl_msg_event_station_disconnect_from_ap_t
#define ctrl_msg_t_payload_event_station_disconnect_from_esp_soft_ap_MSGTYPE ctrl_msg_event_station_disconnect_from_esp_soft_ap_t

extern const pb_msgdesc_t scan_result_t_msg;
extern const pb_msgdesc_t connected_sta_list_t_msg;
extern const pb_msgdesc_t ctrl_msg_req_get_mac_address_t_msg;
extern const pb_msgdesc_t ctrl_msg_resp_get_mac_address_t_msg;
extern const pb_msgdesc_t ctrl_msg_req_get_mode_t_msg;
extern const pb_msgdesc_t ctrl_msg_resp_get_mode_t_msg;
extern const pb_msgdesc_t ctrl_msg_req_set_mode_t_msg;
extern const pb_msgdesc_t ctrl_msg_resp_set_mode_t_msg;
extern const pb_msgdesc_t ctrl_msg_req_get_status_t_msg;
extern const pb_msgdesc_t ctrl_msg_resp_get_status_t_msg;
extern const pb_msgdesc_t ctrl_msg_req_set_mac_address_t_msg;
extern const pb_msgdesc_t ctrl_msg_resp_set_mac_address_t_msg;
extern const pb_msgdesc_t ctrl_msg_req_get_ap_config_t_msg;
extern const pb_msgdesc_t ctrl_msg_resp_get_ap_config_t_msg;
extern const pb_msgdesc_t ctrl_msg_req_connect_ap_t_msg;
extern const pb_msgdesc_t ctrl_msg_resp_connect_ap_t_msg;
extern const pb_msgdesc_t ctrl_msg_req_get_soft_ap_config_t_msg;
extern const pb_msgdesc_t ctrl_msg_resp_get_soft_ap_config_t_msg;
extern const pb_msgdesc_t ctrl_msg_req_start_soft_ap_t_msg;
extern const pb_msgdesc_t ctrl_msg_resp_start_soft_ap_t_msg;
extern const pb_msgdesc_t ctrl_msg_req_scan_result_t_msg;
extern const pb_msgdesc_t ctrl_msg_resp_scan_result_t_msg;
extern const pb_msgdesc_t ctrl_msg_req_soft_ap_connected_sta_t_msg;
extern const pb_msgdesc_t ctrl_msg_resp_soft_ap_connected_sta_t_msg;
extern const pb_msgdesc_t ctrl_msg_req_ota_begin_t_msg;
extern const pb_msgdesc_t ctrl_msg_resp_ota_begin_t_msg;
extern const pb_msgdesc_t ctrl_msg_req_ota_write_t_msg;
extern const pb_msgdesc_t ctrl_msg_resp_ota_write_t_msg;
extern const pb_msgdesc_t ctrl_msg_req_ota_end_t_msg;
extern const pb_msgdesc_t ctrl_msg_resp_ota_end_t_msg;
extern const pb_msgdesc_t ctrl_msg_req_vendor_ie_data_t_msg;
extern const pb_msgdesc_t ctrl_msg_req_set_soft_ap_vendor_specific_ie_t_msg;
extern const pb_msgdesc_t ctrl_msg_resp_set_soft_ap_vendor_specific_ie_t_msg;
extern const pb_msgdesc_t ctrl_msg_req_set_wifi_max_tx_power_t_msg;
extern const pb_msgdesc_t ctrl_msg_resp_set_wifi_max_tx_power_t_msg;
extern const pb_msgdesc_t ctrl_msg_req_get_wifi_curr_tx_power_t_msg;
extern const pb_msgdesc_t ctrl_msg_resp_get_wifi_curr_tx_power_t_msg;
extern const pb_msgdesc_t ctrl_msg_req_config_heartbeat_t_msg;
extern const pb_msgdesc_t ctrl_msg_resp_config_heartbeat_t_msg;
extern const pb_msgdesc_t ctrl_msg_event_esp_init_t_msg;
extern const pb_msgdesc_t ctrl_msg_event_heartbeat_t_msg;
extern const pb_msgdesc_t ctrl_msg_event_station_disconnect_from_ap_t_msg;
extern const pb_msgdesc_t ctrl_msg_event_station_disconnect_from_esp_soft_ap_t_msg;
extern const pb_msgdesc_t ctrl_msg_t_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define SCAN_RESULT_FIELDS &scan_result_t_msg
#define CONNECTED_STA_LIST_FIELDS &connected_sta_list_t_msg
#define CTRL_MSG_REQ_GET_MAC_ADDRESS_FIELDS &ctrl_msg_req_get_mac_address_t_msg
#define CTRL_MSG_RESP_GET_MAC_ADDRESS_FIELDS &ctrl_msg_resp_get_mac_address_t_msg
#define CTRL_MSG_REQ_GET_MODE_FIELDS &ctrl_msg_req_get_mode_t_msg
#define CTRL_MSG_RESP_GET_MODE_FIELDS &ctrl_msg_resp_get_mode_t_msg
#define CTRL_MSG_REQ_SET_MODE_FIELDS &ctrl_msg_req_set_mode_t_msg
#define CTRL_MSG_RESP_SET_MODE_FIELDS &ctrl_msg_resp_set_mode_t_msg
#define CTRL_MSG_REQ_GET_STATUS_FIELDS &ctrl_msg_req_get_status_t_msg
#define CTRL_MSG_RESP_GET_STATUS_FIELDS &ctrl_msg_resp_get_status_t_msg
#define CTRL_MSG_REQ_SET_MAC_ADDRESS_FIELDS &ctrl_msg_req_set_mac_address_t_msg
#define CTRL_MSG_RESP_SET_MAC_ADDRESS_FIELDS &ctrl_msg_resp_set_mac_address_t_msg
#define CTRL_MSG_REQ_GET_AP_CONFIG_FIELDS &ctrl_msg_req_get_ap_config_t_msg
#define CTRL_MSG_RESP_GET_AP_CONFIG_FIELDS &ctrl_msg_resp_get_ap_config_t_msg
#define CTRL_MSG_REQ_CONNECT_AP_FIELDS &ctrl_msg_req_connect_ap_t_msg
#define CTRL_MSG_RESP_CONNECT_AP_FIELDS &ctrl_msg_resp_connect_ap_t_msg
#define CTRL_MSG_REQ_GET_SOFT_AP_CONFIG_FIELDS &ctrl_msg_req_get_soft_ap_config_t_msg
#define CTRL_MSG_RESP_GET_SOFT_AP_CONFIG_FIELDS &ctrl_msg_resp_get_soft_ap_config_t_msg
#define CTRL_MSG_REQ_START_SOFT_AP_FIELDS &ctrl_msg_req_start_soft_ap_t_msg
#define CTRL_MSG_RESP_START_SOFT_AP_FIELDS &ctrl_msg_resp_start_soft_ap_t_msg
#define CTRL_MSG_REQ_SCAN_RESULT_FIELDS &ctrl_msg_req_scan_result_t_msg
#define CTRL_MSG_RESP_SCAN_RESULT_FIELDS &ctrl_msg_resp_scan_result_t_msg
#define CTRL_MSG_REQ_SOFT_AP_CONNECTED_STA_FIELDS &ctrl_msg_req_soft_ap_connected_sta_t_msg
#define CTRL_MSG_RESP_SOFT_AP_CONNECTED_STA_FIELDS &ctrl_msg_resp_soft_ap_connected_sta_t_msg
#define CTRL_MSG_REQ_OTA_BEGIN_FIELDS &ctrl_msg_req_ota_begin_t_msg
#define CTRL_MSG_RESP_OTA_BEGIN_FIELDS &ctrl_msg_resp_ota_begin_t_msg
#define CTRL_MSG_REQ_OTA_WRITE_FIELDS &ctrl_msg_req_ota_write_t_msg
#define CTRL_MSG_RESP_OTA_WRITE_FIELDS &ctrl_msg_resp_ota_write_t_msg
#define CTRL_MSG_REQ_OTA_END_FIELDS &ctrl_msg_req_ota_end_t_msg
#define CTRL_MSG_RESP_OTA_END_FIELDS &ctrl_msg_resp_ota_end_t_msg
#define CTRL_MSG_REQ_VENDOR_IE_DATA_FIELDS &ctrl_msg_req_vendor_ie_data_t_msg
#define CTRL_MSG_REQ_SET_SOFT_AP_VENDOR_SPECIFIC_IE_FIELDS &ctrl_msg_req_set_soft_ap_vendor_specific_ie_t_msg
#define CTRL_MSG_RESP_SET_SOFT_AP_VENDOR_SPECIFIC_IE_FIELDS &ctrl_msg_resp_set_soft_ap_vendor_specific_ie_t_msg
#define CTRL_MSG_REQ_SET_WIFI_MAX_TX_POWER_FIELDS &ctrl_msg_req_set_wifi_max_tx_power_t_msg
#define CTRL_MSG_RESP_SET_WIFI_MAX_TX_POWER_FIELDS &ctrl_msg_resp_set_wifi_max_tx_power_t_msg
#define CTRL_MSG_REQ_GET_WIFI_CURR_TX_POWER_FIELDS &ctrl_msg_req_get_wifi_curr_tx_power_t_msg
#define CTRL_MSG_RESP_GET_WIFI_CURR_TX_POWER_FIELDS &ctrl_msg_resp_get_wifi_curr_tx_power_t_msg
#define CTRL_MSG_REQ_CONFIG_HEARTBEAT_FIELDS &ctrl_msg_req_config_heartbeat_t_msg
#define CTRL_MSG_RESP_CONFIG_HEARTBEAT_FIELDS &ctrl_msg_resp_config_heartbeat_t_msg
#define CTRL_MSG_EVENT_ESP_INIT_FIELDS &ctrl_msg_event_esp_init_t_msg
#define CTRL_MSG_EVENT_HEARTBEAT_FIELDS &ctrl_msg_event_heartbeat_t_msg
#define CTRL_MSG_EVENT_STATION_DISCONNECT_FROM_AP_FIELDS &ctrl_msg_event_station_disconnect_from_ap_t_msg
#define CTRL_MSG_EVENT_STATION_DISCONNECT_FROM_ESP_SOFT_AP_FIELDS &ctrl_msg_event_station_disconnect_from_esp_soft_ap_t_msg
#define CTRL_MSG_FIELDS &ctrl_msg_t_msg

/* Maximum encoded size of messages (where known) */
/* CtrlMsg_Event_ESPInit_size depends on runtime parameters */
/* CtrlMsg_size depends on runtime parameters */
#define CONNECTED_STA_LIST_SIZE                  31
#define CTRL_MSG_EVENT_HEARTBEAT_SIZE            11
#define CTRL_MSG_EVENT_STATION_DISCONNECT_FROM_AP_SIZE 11
#define CTRL_MSG_EVENT_STATION_DISCONNECT_FROM_ESP_SOFT_AP_SIZE 31
#define CTRL_MSG_REQ_CONFIG_HEARTBEAT_SIZE       13
#define CTRL_MSG_REQ_CONNECT_AP_SIZE             130
#define CTRL_MSG_REQ_GET_AP_CONFIG_SIZE          0
#define CTRL_MSG_REQ_GET_MAC_ADDRESS_SIZE        11
#define CTRL_MSG_REQ_GET_MODE_SIZE               0
#define CTRL_MSG_REQ_GET_SOFT_AP_CONFIG_SIZE     0
#define CTRL_MSG_REQ_GET_STATUS_SIZE             0
#define CTRL_MSG_REQ_GET_WIFI_CURR_TX_POWER_SIZE 0
#define CTRL_MSG_REQ_OTA_BEGIN_SIZE              0
#define CTRL_MSG_REQ_OTA_END_SIZE                0
#define CTRL_MSG_REQ_OTA_WRITE_SIZE              102
#define CTRL_MSG_REQ_SCAN_RESULT_SIZE            0
#define CTRL_MSG_REQ_SET_MAC_ADDRESS_SIZE        31
#define CTRL_MSG_REQ_SET_MODE_SIZE               11
#define CTRL_MSG_REQ_SET_SOFT_AP_VENDOR_SPECIFIC_IE_SIZE 149
#define CTRL_MSG_REQ_SET_WIFI_MAX_TX_POWER_SIZE  11
#define CTRL_MSG_REQ_SOFT_AP_CONNECTED_STA_SIZE  0
#define CTRL_MSG_REQ_START_SOFT_AP_SIZE          135
#define CTRL_MSG_REQ_VENDOR_IE_DATA_SIZE         140
#define CTRL_MSG_RESP_CONFIG_HEARTBEAT_SIZE      11
#define CTRL_MSG_RESP_CONNECT_AP_SIZE            31
#define CTRL_MSG_RESP_GET_AP_CONFIG_SIZE         89
#define CTRL_MSG_RESP_GET_MAC_ADDRESS_SIZE       31
#define CTRL_MSG_RESP_GET_MODE_SIZE              22
#define CTRL_MSG_RESP_GET_SOFT_AP_CONFIG_SIZE    148
#define CTRL_MSG_RESP_GET_STATUS_SIZE            11
#define CTRL_MSG_RESP_GET_WIFI_CURR_TX_POWER_SIZE 22
#define CTRL_MSG_RESP_OTA_BEGIN_SIZE             11
#define CTRL_MSG_RESP_OTA_END_SIZE               11
#define CTRL_MSG_RESP_OTA_WRITE_SIZE             11
#define CTRL_MSG_RESP_SCAN_RESULT_SIZE           1517
#define CTRL_MSG_RESP_SET_MAC_ADDRESS_SIZE       11
#define CTRL_MSG_RESP_SET_MODE_SIZE              11
#define CTRL_MSG_RESP_SET_SOFT_AP_VENDOR_SPECIFIC_IE_SIZE 11
#define CTRL_MSG_RESP_SET_WIFI_MAX_TX_POWER_SIZE 11
#define CTRL_MSG_RESP_SOFT_AP_CONNECTED_STA_SIZE 677
#define CTRL_MSG_RESP_START_SOFT_AP_SIZE         31
#define SCAN_RESULT_SIZE                         73

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
